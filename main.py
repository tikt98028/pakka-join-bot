import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, ChatJoinRequestHandler, ContextTypes

# üîê –í–°–¢–ê–í –°–Æ–î–ò –°–í–Ü–ô –¢–û–ö–ï–ù
BOT_TOKEN = "7690353390:AAE4uac_oqNBCjpWJqtapH1tpNqWbU3VjjU"

# üîç –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# üì• –û–±—Ä–æ–±–Ω–∏–∫ join-–∑–∞–ø–∏—Ç—ñ–≤
async def handle_join_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        await context.bot.approve_chat_join_request(
            chat_id=update.chat_join_request.chat.id,
            user_id=update.chat_join_request.from_user.id,
        )
        logging.info(
            f"‚úÖ –ó–∞–ø–∏—Ç –≤—ñ–¥ @{update.chat_join_request.from_user.username or update.chat_join_request.from_user.id} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ."
        )
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É: {e}")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(ChatJoinRequestHandler(handle_join_request))
    app.run_polling()
