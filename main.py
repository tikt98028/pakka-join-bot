import os
import logging
from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, ContextTypes, ChatJoinRequestHandler
)
from dotenv import load_dotenv
from telegram.error import BadRequest

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"https://pakka-join-bot.onrender.com{WEBHOOK_PATH}"
WELCOME_MESSAGE = "–ü—Ä–∏–≤—ñ—Ç üëã –î—è–∫—É—é, —â–æ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –∫–∞–Ω–∞–ª—É! –Ø–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –Ω–∞–ø–∏—à–∏ —Å—é–¥–∏."

# üîá –õ–æ–≥—É–≤–∞–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ INFO —Ç–∞ –≤–∏—â–µ
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

app = FastAPI()
telegram_app = ApplicationBuilder().token(BOT_TOKEN).build()

# üë• –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—ñ–≤
async def approve(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.chat_join_request.from_user
    chat_id = update.chat_join_request.chat.id
    username = f"@{user.username}" if user.username else f"ID:{user.id}"

    # ‚úÖ –°–ø—Ä–æ–±–∞ —Å—Ö–≤–∞–ª–∏—Ç–∏ —é–∑–µ—Ä–∞
    try:
        await context.bot.approve_chat_join_request(chat_id=chat_id, user_id=user.id)
        logging.info(f"‚úÖ –°—Ö–≤–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Ç –≤—ñ–¥ {username}")
    except BadRequest as e:
        if "hide_requester_missing" in str(e):
            logging.warning(f"‚ö†Ô∏è Telegram –Ω–µ –¥–æ–∑–≤–æ–ª—è—î —Å—Ö–≤–∞–ª–∏—Ç–∏ {username}: hide_requester_missing")
        else:
            logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ö–≤–∞–ª–µ–Ω–Ω—ñ {username}: {e}")

    # ‚úÖ –°–ø—Ä–æ–±–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    try:
        await context.bot.send_message(chat_id=user.id, text=WELCOME_MESSAGE)
        logging.info(f"üì¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ {username}")
    except Exception as e:
        logging.warning(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ø–∏—Å–∞—Ç–∏ {username}: {e}")

# üöÄ Webhook setup
@app.on_event("startup")
async def on_startup():
    telegram_app.add_handler(ChatJoinRequestHandler(approve))
    await telegram_app.initialize()
    await telegram_app.start()
    await telegram_app.bot.set_webhook(url=WEBHOOK_URL)
    logging.info("‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

@app.on_event("shutdown")
async def on_shutdown():
    await telegram_app.stop()
    await telegram_app.shutdown()

@app.post(WEBHOOK_PATH)
async def telegram_webhook(req: Request):
    data = await req.json()
    update = Update.de_json(data, telegram_app.bot)
    await telegram_app.process_update(update)
    return {"status": "ok"}
