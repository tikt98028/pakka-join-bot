import logging
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, ChatJoinRequestHandler, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
WELCOME_MESSAGE = "–ü—Ä–∏–≤—ñ—Ç üëã –î—è–∫—É—é, —â–æ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –∫–∞–Ω–∞–ª—É! –Ø–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –Ω–∞–ø–∏—à–∏ —Å—é–¥–∏."

# –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –ª–æ–≥—ñ–≤
logging.basicConfig(level=logging.INFO)

async def approve(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.chat_join_request.from_user
    chat_id = update.chat_join_request.chat.id

    await context.bot.approve_chat_join_request(chat_id=chat_id, user_id=user.id)
    
    username = f"@{user.username}" if user.username else f"ID:{user.id}"
    logging.info(f"‚úÖ –°—Ö–≤–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Ç –≤—ñ–¥ {username}")

    try:
        await context.bot.send_message(chat_id=user.id, text=WELCOME_MESSAGE)
    except:
        logging.warning(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ø–∏—Å–∞—Ç–∏ {username}")

app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(ChatJoinRequestHandler(approve))
app.run_polling()
